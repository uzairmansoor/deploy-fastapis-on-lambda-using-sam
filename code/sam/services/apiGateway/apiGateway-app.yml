AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation Template to deploy lambda functions"

Parameters:
  project:
    Type: String
    Description: Project name
  env:
    Type: String
    Default: stage
    AllowedValues: [prod, dev, qa, stage]
    Description: Environment name
  app:
    Type: String
    Default: app
    Description: Name of the app
  lambdaFunctionArn:
    Type: String
    Description: ARN of the lambda function
  restApiEndointConfiguration:  
    Type: String
    Default: REGIONAL
    AllowedValues: [REGIONAL, EDGE, PRIVATE]
    Description: REST API endpoint configuration type

Resources:
  ### REST API Gateway ###
  apiGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub ${project}-${env}-${app}-rest-api
      EndpointConfiguration:
        Types:
          - !Ref restApiEndointConfiguration

  apiGatewayRootMethodApi:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref apiGatewayRestApi
      ResourceId: !GetAtt apiGatewayRestApi.RootResourceId
      HttpMethod: GET
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          !Sub 
            - "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunctionArn}/invocations"
            - LambdaFunctionArn: !Ref lambdaFunctionArn

  apiGatewayResourceLogin:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt apiGatewayRestApi.RootResourceId
      PathPart: login
      RestApiId: !Ref apiGatewayRestApi

  apiGatewayLoginMethodApi:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref apiGatewayRestApi
      ResourceId: !Ref apiGatewayResourceLogin
      HttpMethod: POST
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          !Sub 
            - "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunctionArn}/invocations"
            - LambdaFunctionArn: !Ref lambdaFunctionArn

  apiGatewayResourceGetUserHistory:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt apiGatewayRestApi.RootResourceId
      PathPart: get-user-history
      RestApiId: !Ref apiGatewayRestApi

  apiGatewayGetUserHistoryMethodApi:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref apiGatewayRestApi
      ResourceId: !Ref apiGatewayResourceGetUserHistory
      HttpMethod: GET
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          !Sub 
            - "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunctionArn}/invocations"
            - LambdaFunctionArn: !Ref lambdaFunctionArn

  apiGatewayResourceGetChat:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt apiGatewayRestApi.RootResourceId
      PathPart: get-chat
      RestApiId: !Ref apiGatewayRestApi

  apiGatewayGetChatMethodApi:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref apiGatewayRestApi
      ResourceId: !Ref apiGatewayResourceGetChat
      HttpMethod: GET
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          !Sub 
            - "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunctionArn}/invocations"
            - LambdaFunctionArn: !Ref lambdaFunctionArn

  apiGatewayResourceProcessQuestion:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt apiGatewayRestApi.RootResourceId
      PathPart: process-question
      RestApiId: !Ref apiGatewayRestApi

  apiGatewayProcessQuestionMethodApi:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref apiGatewayRestApi
      ResourceId: !Ref apiGatewayResourceProcessQuestion
      HttpMethod: POST
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          !Sub 
            - "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunctionArn}/invocations"
            - LambdaFunctionArn: !Ref lambdaFunctionArn

  restApiDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: 
      - apiGatewayRootMethodApi
      - apiGatewayLoginMethodApi
      - apiGatewayGetUserHistoryMethodApi
      - apiGatewayGetChatMethodApi
      - apiGatewayProcessQuestionMethodApi
    Properties:
      RestApiId: !Ref apiGatewayRestApi
  
  apiGatewayDevStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      StageName: dev
      Description: Development stage
      RestApiId: !Ref apiGatewayRestApi
      DeploymentId: !Ref restApiDeployment
      TracingEnabled: true
      MethodSettings:
        - DataTraceEnabled: true
          HttpMethod: "*"
          LoggingLevel: INFO
          ResourcePath: "/*"
          MetricsEnabled: true

  apiGatewayLambdaTrigger:
    Type: AWS::Lambda::Permission
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref lambdaFunctionArn
      Principal: "s3.amazonaws.com"
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${apiGatewayRestApi}/*/*"
    
    # ### REST API Key ###
    # RestApiKey:
    #   Type: AWS::ApiGateway::ApiKey
    #   Properties:
    #     Name: fastapi-rest-api-key-${self:provider.stage}
    #     Enabled: true

    # ### REST API Usage Plan ###
    # ApiGatewayUsagePlan:
    #   Type: AWS::ApiGateway::UsagePlan
    #   DependsOn: restApiDeployment
    #   Properties:
    #     UsagePlanName: fastapi-usage-plan-${self:provider.stage}
    #     Throttle:
    #       RateLimit: 100
    #       BurstLimit: 200
    #     ApiStages:
    #       - ApiId: !Ref apiGatewayRestApi
    #         Stage: dev

    # RestApiKeyUsagePlanAttachment:
    #   Type: AWS::ApiGateway::UsagePlanKey
    #   Properties:
    #     KeyId: !Ref RestApiKey
    #     KeyType: API_KEY
    #     UsagePlanId: !Ref ApiGatewayUsagePlan
Outputs:
  apiGatewayRestApiId:
    Description: ApiGatewayRestApi Id
    Value: !Ref apiGatewayRestApi
    Export: 
      Name: !Sub "${project}-${app}-${env}-apiGatewayRestApiId"